{"version":3,"file":"static/js/main.chunk.js","sources":["/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/common/types.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/app/App.tsx","webpack:///./src/components/app/_app.scss?6da1","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/body/BodyView.tsx","webpack:///./src/components/body/_body.scss?be95","webpack:///./src/components/body/_bodyView.scss?fe20","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/credits/Credits.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/footer/Footer.tsx","webpack:///./src/components/footer/_footer.scss?b597","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/header/BurgerMenu.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/header/Header.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/header/Logo.tsx","webpack:///./src/components/header/_burgerMenu.scss?a5bd","webpack:///./src/components/header/_header.scss?67ce","webpack:///./src/components/header/_logo.scss?800c","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/social/Social.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/social/SocialItem.tsx","webpack:///./src/components/social/_social.scss?6ea0","webpack:///./src/components/social/_socialIcon.scss?359c","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/components/spinner/SpinnerView.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/app/appActions.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/app/appReducer.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/blog/Blog.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/blog/PostList.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/blog/PostListCard.tsx","webpack:///./src/features/blog/_blog.scss?8f76","webpack:///./src/features/blog/_postList.scss?564f","webpack:///./src/features/blog/_postList_card.scss?6255","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/body/Body.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/social/socialReducer.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/spinner/Spinner.tsx","webpack:///./src/features/spinner/_spinner.scss?a427","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/wp/categoryReducer.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/wp/menuActions.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/wp/menuReducer.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/wp/mergers.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/wp/singularActions.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/features/wp/singularReducer.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/index.scss","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/index.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/nav/Nav.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/nav/NavContainer.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/nav/NavItem.tsx","webpack:///./src/nav/_nav.scss?5358","webpack:///./src/nav/_navContainer.scss?cd80","webpack:///./src/nav/_navItem.scss?ac93","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/routes/BlogRoute.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/routes/BodyRoute.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/routes/CreditsRoute.tsx","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/serviceWorker.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/store/rootReducer.ts","/mnt/utkusarioglu/Documents/Projects/BasakBeykoz/basakbeykoz_d/themes/basakbeykoz/react-src/src/store/store.ts"],"sourcesContent":["export const FETCH_MENU = \"FETCH_MENU\";\n\nexport const FETCH_POSTS = \"FETCH_POSTS\";\nexport const FETCH_POST = \"FETCH_POST\";\n\nexport const FETCH_CATEGORY = \"FETCH_CATEGORY\";\nexport const FETCH_CATEGORIES = \"FETCH_CATEGORIES\";\nexport const FETCH_CATEGORY_POSTS = \"FETCH_CATEGORY_POSTS\"; \n\nexport const FETCH_PAGE = \"FETCH_PAGE\";\n\nexport const FETCH_SINGULAR = \"FETCH_SINGULAR\";\n\nexport const IS_FETCHING = \"IS_FETCHING\";\nexport const IS_DISPLAYING = \"IS_DISPLAYING\"; \n\nexport const NAV_TO_CONTENT = \"NAV_TO_CONTENT\";\n\nexport const IS_MENU_OPEN = \"IS_MENU_OPEN\";","import React from \"react\";\nimport \"./_app.scss\";\n\nimport { Provider } from 'react-redux';\nimport store from \"../../store/store\";\nimport { Route, BrowserRouter as Router, Switch, } from 'react-router-dom'\n\nimport Header from \"../header/Header\";\nimport Spinner from \"../../features/spinner/Spinner\";\nimport Footer from '../footer/Footer';\n\nimport Logo from \"../header/Logo\";\nimport Social from '../social/Social';\nimport NavContainer from \"../../nav/NavContainer\";\n\nimport BlogRoute from \"../../routes/BlogRoute\";\nimport CreditsRoute from \"../../routes/CreditsRoute\";\nimport BodyRoute from \"../../routes/BodyRoute\";\n\nfunction App() {\n    const blog_slug = process.env.REACT_APP_BLOG_SLUG as string;\n\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Spinner />\n                    <NavContainer />\n                    <Header />\n                    <div className=\"App-wideScreenControls\">\n                        <Logo />\n                        <Social />\n                    </div>\n                    <div className=\"App-scrollingElements\">\n                        <Switch>\n                            <Route \n                                exact \n                                path={\"/credits\"}>\n                                <CreditsRoute />\n                            </Route>\n                            <Route \n                                exact \n                                path={\"/\" + blog_slug}>\n                                <BlogRoute />\n                            </Route>\n                            <Route exact path=\"/:slug?\">\n                                <BodyRoute />\n                            </Route>\n                        </Switch>\n                        <Footer />\n                    </div>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// extracted by mini-css-extract-plugin","import React, { Fragment as div } from \"react\";\nimport PostList from \"../../features/blog/PostList\";\nimport { wpSingularItemForDisplay } from \"../../features/wp/@types-wp\";\nimport { Helmet } from \"react-helmet\";\nimport ReactGA from \"react-ga\";\nimport \"./_body.scss\";\nimport \"./_bodyView.scss\";\n\ninterface Props extends wpSingularItemForDisplay {}\n\nfunction BodyView(props: Props): React.FunctionComponentElement<Props> {\n\n    window.scrollTo(0,0);\n    \n    const siteName = process.env.REACT_APP_NAME as string;\n    const separator = process.env.REACT_APP_SEPARATOR as string;\n    const homeSlug = process.env.REACT_APP_HOME_SLUG as string;\n    const siteTitle = siteName + ((props.slug === homeSlug || props.slug === \"\")\n        ? \"\" \n        : separator + props.title);\n\n    let bodyExtraClasses: string[] = [\n        props.type, \n        props.slug,\n    ];\n    \n    let featureImage;\n    if( props.thumbnail !== \"\") {\n        bodyExtraClasses.push(\"has-FeatureImage\");\n        featureImage = (\n            <div \n                className=\"FeatureImage-on\"\n                dangerouslySetInnerHTML={{__html: props.thumbnail}} />\n        ); \n    } else {\n        featureImage = (\n            <div className=\"FeatureImage-off\" />\n        );\n    }\n    \n    let featureTitle; \n    let articleTitle; \n    if( props.title !== \"\") {\n        bodyExtraClasses.push(\"has-CanvasTitle\");\n        featureTitle = <h2 className=\"Canvas-featureTitle text-blue\">{props.title}</h2>\n        articleTitle = <h2 className=\"Canvas-articleTitle text-blue\">{props.title}</h2>\n    }\n\n    let postList;\n    let excludeSlug = [];\n    if ( props.type === \"post\") {\n        excludeSlug.push(props.slug);\n        bodyExtraClasses.push(\"has-PostExcerptList\");\n        postList = (\n            <div className=\"PostList-wrapper\">\n                <h4>Similar Reads</h4>\n                <PostList excludeSlug={excludeSlug} />\n            </div>\n        );\n    }\n\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    \n    return (\n        <div>\n            <Helmet>\n                <title>{siteTitle}</title>\n            </Helmet>\n            <div className={\"Canvas \" + bodyExtraClasses.join(\" \")}>\n                <div className=\"Canvas-decor\">\n                    {featureImage}\n                    {featureTitle}\n                </div>\n                {articleTitle}\n                <article \n                    dangerouslySetInnerHTML={{__html: props.content}} />\n                {postList}\n            </div>\n        </div>\n    )\n}\n\nexport default BodyView;","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React, {useState} from \"react\";\nimport { setFetching } from \"../../features/app/appActions\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { connect } from \"react-redux\";\n\nconst mapState = (state: RootState) => ({})\n\nconst mapDispatch = { \n    setFetching,\n}   \n\ninterface OwnProps {}\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction Credits(props: Props): React.FunctionComponentElement<Props> {\n\n    props.setFetching(false);\n    window.scrollTo(0,0);\n\n    const [colorSet, setColorSet] = useState(0);\n\n    const uploads_dir = process.env.REACT_APP_UPLOADS_DIR as string;\n    const featureImageName = \"yazilar-feature-image\";\n    const featureImagePath = `${uploads_dir}/${featureImageName}-`;\n    const srcSet = [\n        \"scaled.jpg 2560w\", \n        \"300x196.jpg 300w\", \n        \"1024x669.jpg 1024w\", \n        \"768x501.jpg 768w\", \n        \"1536x1003.jpg 1536w\", \n        \"2048x1337.jpg 2048w\"\n    ]\n    .map((variation) => featureImagePath + variation)\n    .join(\",\");\n\n    const COLOR_SETS: {[key: string]: string}[] = [\n        {\n            \"--brush-white\": \"#F4F4F9\",\n            \"--brush-lightGray\": \"#fafafa\",\n            \"--brush-gray\": \"#859FA4\",\n            \"--brush-darkGray\": \"#265151\",\n            \"--brush-black\": \"#1E3735\",\n            \"--brush-lightBlue\": \"#456266\",\n            \"--brush-darkBlue\": \"#265151\",\n            \"--brush-lightYellow\": \"#F6DFB1\",\n            \"--brush-darkYellow\": \"#FBBB53\",\n            \"--brush-lightGreen\": \"#81AE9D\",\n        \n            \"--filter-white:\": \"contrast(1) invert(96%) sepia(4%) saturate(282%) hue-rotate(202deg) brightness(102%) contrast(95%)\",\n            \"--filter-darkGray\": \"invert(34%) sepia(30%) saturate(388%) hue-rotate(139deg) brightness(92%) contrast(86%)\",\n            \"--filter-logo-white\": \"brightness(0) contrast(1) invert(96%) sepia(4%) saturate(282%) hue-rotate(202deg) brightness(102%) contrast(95%)\",\n        },\n        {\n            \"--brush-white\": \"#F4F4F9\",\n            \"--brush-lightGray\": \"#fafafa\",\n            \"--brush-gray\": \"#263f7b\",\n            \"--brush-darkGray\": \"#437777\",\n            \"--brush-black\": \"#5e7077\",\n            \"--brush-lightBlue\": \"#7da1a6\",\n            \"--brush-darkBlue\": \"var(--brush-darkGray)\",\n            \"--brush-lightYellow\": \"#eee2c8\",\n            \"--brush-darkYellow\": \"#fbcb5a\",\n            \"--brush-lightGreen\": \"#85a89f\",\n        \n            \"--filter-white:\": \"brightness(0)\",\n            \"--filter-darkGray\": \"brightness(0)\", \n            \"--filter-logo-white\": \"brightness(0)\",\n        },\n        {\n            \"--brush-white\":  \"#F4F4F9\",\n            \"--brush-gray\":  \"#263f7b\",\n            \"--brush-darkGray\":  \"#373b44\",\n            \"--brush-black\":  \"#5e7077\",\n            \"--brush-lightBlue\":  \"#629874\",\n            \"--brush-darkBlue\":  \"var(--brush-darkGray)\",\n            \"--brush-lightYellow\":  \"#a6b9da\",\n            \"--brush-darkYellow\":  \"#93e0c1\",\n            \"--brush-lightGreen\":  \"#f2dd8b\",\n        \n            \"--filter-white:\":  \"brightness(0)\",\n            \"--filter-darkGray\":  \"brightness(0)\", \n            \"--filter-logo-white\":  \"brightness(0)\",\n        },\n        {\n            \"--brush-white\":  \"#F4F4F9\",\n            \"--brush-lightGray\":  \"#fafafa\",\n            \"--brush-gray\":  \"#859FA4\",\n            \"--brush-darkGray\":  \"#a1bfb1\",\n            \"--brush-black\":  \"#1b2928\",\n            \"--brush-lightBlue\":  \"#29717b\",\n            \"--brush-darkBlue\":  \"#265151\",\n            \"--brush-lightYellow\":  \"#ffedc9\",\n            \"--brush-darkYellow\":  \"#f0c43e\",\n            \"--brush-lightGreen\":  \"#55987f\",\n        \n            \"--filter-white:\": \"brightness(0)\",\n            \"--filter-darkGray\": \"brightness(0)\", \n            \"--filter-logo-white\": \"brightness(0)\",\n        }\n    ]\n\n\n\n    const changeColors = () => {\n        \n        Object.entries(COLOR_SETS[colorSet]).forEach(([n, v]: any) => {\n            document.documentElement.style.setProperty(n, v);\n        })\n        setColorSet((set) => ++set % COLOR_SETS.length);\n    }\n\n\n\n    return (\n        <div\n            className=\"Canvas page has-FeatureImage has-body-title\"\n            >\n            <div className=\"Canvas-decor\">\n                <div className=\"FeatureImage-on\" >    \n                    <img \n                        width=\"2560\" \n                        height=\"1671\" \n                        src={`${featureImageName}scaled.jpg`} \n                        alt=\"Feature\" \n                        srcSet={srcSet} \n                        sizes=\"(max-width: 2560px) 100vw, 2560px\" />\n                </div>\n                <h2 className=\"Canvas-featureTitle text-blue\">Credits</h2>\n            </div>\n                <h2 className=\"Canvas-articleTitle text-blue\">Credits</h2>\n                <article>\n                    <h3>Current Color Set: {colorSet.toString()}</h3>\n                    <button \n                        onClick={changeColors}>Change white</button>\n                </article>\n        </div>\n    )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    // @ts-ignore\n    mapState, mapDispatch)(Credits);\n","import React from 'react';\nimport \"./_footer.scss\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {}\n\nfunction Footer(props: Props): React.FunctionComponentElement<Props> {\n    const up = process.env.REACT_APP_UPLOADS_DIR as string;\n    return (\n        <div className=\"Footer\">\n            <div className=\"Footer-art\">\n                <img\n                    className=\"Footer-art-fg\"\n                    alt=\"Footer decoration\" \n                    src={up + \"/footer-art-fg.svg\"} \n                    />\n            </div>\n            <Link\n                to=\"/credits\">\n                <div className=\"Footer-credits\">\n                    <span className=\"Footer-yearAndName\">\n                        ♡<br />{ new Date(Date.now()).getFullYear()}<br />Basak Beykoz\n                    </span>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Footer\n","// extracted by mini-css-extract-plugin","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMenu } from \"../../features/wp/menuActions\";\nimport { setDisplaying, setIsMenuOpen } from '../../features/app/appActions'\nimport { RootState } from '../../store/rootReducer';\nimport \"./_burgerMenu.scss\";\n\nconst mapState = (state: RootState) => ({\n    menu: state.menu,\n    isDisplaying: state.app.isDisplaying,\n    isMenuOpen: state.app.isMenuOpen,\n});\n\nconst mapDispatch = { \n    setDisplaying,\n    fetchMenu, \n    setIsMenuOpen,\n}\n\ninterface OwnProps { }\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction BurgerMenu(\n    props: Props\n): React.FunctionComponentElement<Props> {\n\n    const uploadsDir = process.env.REACT_APP_UPLOADS_DIR as string;\n    const { isMenuOpen, setIsMenuOpen } = props;\n\n    return (\n        <div className=\"BurgerMenu\">\n            <button \n                onClick={() => setIsMenuOpen(!isMenuOpen)}\n                className=\"BurgerMenu-burgerButton\">\n                <img \n                    alt=\"Menu\"\n                    src={uploadsDir + \"/burger-menu.svg\"} />\n            </button>\n        </div>\n    )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(BurgerMenu);\n","import React  from \"react\";\nimport \"./_header.scss\";\n\nimport Logo from \"./Logo\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport Social from \"../social/Social\";\n\nfunction Header() {\n    return (\n        <header className=\"Header\">\n            <div className=\"Header-bottomWrap\">\n                <Logo />\n                <Social />\n                <BurgerMenu />\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { setDisplaying, setIsMenuOpen } from '../../features/app/appActions'\nimport { connect } from \"react-redux\";\nimport \"./_logo.scss\";\n\nconst mapState = (state: RootState) => ({\n    menu: state.menu.items\n});\n\nconst mapDispatch = {\n    setDisplaying,\n    setIsMenuOpen,\n}\n\ninterface OwnProps {}\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction Logo(props: Props): React.FunctionComponentElement<Props> {\n\n    const { setDisplaying, setIsMenuOpen } = props;\n    const uploads = process.env.REACT_APP_UPLOADS_DIR;\n    const home_slug = process.env.REACT_APP_HOME_SLUG as string\n\n    const linkClick = () => {\n        setIsMenuOpen(false)\n        setDisplaying({\n            slug: home_slug\n        })        \n    }\n\n    return (\n        <div className=\"Logo\">\n            <div className=\"Logo-decor\" />\n            <Link\n                onClick={linkClick}\n                to=\"/\">\n                <div \n                    className=\"Logo-logo\"\n                    >\n                    <img \n                        src={ uploads + \"/logo-inline-color.svg\"}\n                        alt=\"logo\"/>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(Logo);\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React from \"react\";\nimport { connect } from 'react-redux';\n\nimport \"./_social.scss\";\nimport { RootState } from \"../../store/rootReducer\";\nimport SocialItem from './SocialItem';\n\nconst mapState = (state: RootState) => ({\n    socialItems: state.social.items,\n});\n\nconst mapDispatch = {}\n\ninterface OwnProps { }\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction Social(props: Props) {\n\n    const socialItems = props.socialItems;\n\n    const socialComponents = socialItems.map((item) => {\n        return <SocialItem item={item} />\n    })\n\n    return (\n        <div className=\"Social\">\n            <div className=\"Social-list\">\n                {socialComponents}\n            </div>\n            <div className=\"Social-decor\" />\n        </div>\n    )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(Social);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ISocialItem } from '../../features/social/@types-social';\nimport {setIsMenuOpen} from '../../features/app/appActions';\nimport ReactGA from \"react-ga\";\nimport { RootState } from \"../../store/rootReducer\";\nimport './_socialIcon.scss';\n\ninterface OwnProps {\n    item: ISocialItem;\n}\n\nconst mapState = (state: RootState) => ({\n});\n\nconst mapDispatch = {\n    setIsMenuOpen,\n}\n\ninterface OwnProps {}\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction SocialItem(props: Props) {\n\n    const { item, setIsMenuOpen } = props;\n\n    return (\n        <ReactGA.OutboundLink\n            eventLabel={item.title}\n            onClick={() => setIsMenuOpen(false) }\n            to={item.link}\n            target=\"_blank\"\n        >\n            <img \n                className=\"Social-icon\"\n                src={item.icon}\n                title={item.title} \n                alt={item.title}></img>\n            \n        </ReactGA.OutboundLink>    \n    )\n}\n\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(SocialItem);\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React from 'react';\n\ninterface OwnProps {\n    display: string;\n    loadingMessage: string;\n}\n\ntype Props = OwnProps;\n\nfunction SpinnerView(props: Props) {\n\n    const uploadsDir = process.env.REACT_APP_UPLOADS_DIR;\n    const { display, loadingMessage } = props;\n    \n    return (\n        <div \n            className=\"Spinner\"\n            style={{display}}>\n            <img \n                src={ uploadsDir + \"/logo-inline-black.svg\"}\n                alt=\"Basak Beykoz\"\n                className=\"Spinner-logo\"/>\n            <p \n                className=\"Spinner-loadMessage\"\n                >{ loadingMessage }</p>\n        </div>\n    )\n}\n\nexport default SpinnerView","import { DispatchMethod} from '../../common/@types-actions';\nimport { IS_FETCHING, IS_DISPLAYING, IS_MENU_OPEN } from '../../common/types'\nimport stateMap from '../../store/@types-state';\n\ntype isDisplaying = stateMap[\"app\"][\"isDisplaying\"];\ntype isFetching = stateMap[\"app\"][\"isFetching\"];\ntype isMenuOpen = stateMap['app']['isMenuOpen'];\n\nexport const setFetching = (fetch_bool: boolean) => \n    (dispatch: DispatchMethod<isFetching>) => {\n        dispatch({\n            type: IS_FETCHING,\n            state: \"success\",\n            payload: fetch_bool,\n        })\n    }\n\nexport const setDisplaying = (is_displaying: Partial<isDisplaying>) =>\n    (dispatch: DispatchMethod<Partial<isDisplaying>>) => {\n        dispatch({\n            type: IS_DISPLAYING,\n            state: \"success\",\n            payload: is_displaying,\n        })\n    }\n\nexport const setIsMenuOpen = (is_menuOpen: isMenuOpen) => \n    (dispatch: DispatchMethod<isMenuOpen>) => {\n        console.log('dispatch is menu open', is_menuOpen)\n        dispatch({\n            type: IS_MENU_OPEN,\n            state: 'success',\n            payload: is_menuOpen,\n        })\n}","import { IS_DISPLAYING, IS_FETCHING, IS_MENU_OPEN } from '../../common/types'\nimport { FSA } from \"../../common/@types-actions\";\nimport stateMap from \"../../store/@types-state\";\n\ntype isDisplaying = stateMap[\"app\"][\"isDisplaying\"];\ntype isFetching = stateMap[\"app\"][\"isFetching\"];\ntype isMenuOpen = stateMap[\"app\"][\"isMenuOpen\"];\n\nconst initialState: stateMap[\"app\"] = {\n    isFetching: true,\n    isMenuOpen: false,\n    isDisplaying: {\n        slug: process.env.REACT_APP_HOME_SLUG as string,\n        loadTime: 0,\n        active: {\n            slug: \"\",\n            type: \"page\",\n            title: \"\",\n            content: \"\",\n            thumbnail: \" \",\n        },\n    }\n}\n\nexport default function (\n    state = initialState,\n    action: FSA<isDisplaying | isFetching >,\n): stateMap[\"app\"] {\n    switch (action.type) {\n\n        case IS_DISPLAYING:\n            if(action.state === \"fail\") return state \n            return {\n                ...state,\n                isDisplaying: {\n                    ...state.isDisplaying,\n                    ...action.payload as isDisplaying\n                }\n            }\n\n        case IS_FETCHING:\n            if(action.state === \"fail\") return state \n            return {\n                ...state,\n                isFetching: action.payload as isFetching,\n            }\n        \n        case IS_MENU_OPEN:\n            if(action.state === 'fail') return state;\n            return {\n                ...state,\n                isMenuOpen: action.payload as isMenuOpen,\n            }\n\n        default:\n            return state;\n    }\n}\n","import React, { Fragment } from \"react\";\nimport PostList from \"./PostList\";\nimport { Helmet } from \"react-helmet\";\nimport ReactGA from \"react-ga\";\nimport \"./_blog.scss\";\n\nfunction Blog() {\n\n    window.scrollTo(0,0);\n\n    const siteName = process.env.REACT_APP_NAME as string;\n    const separator = process.env.REACT_APP_SEPARATOR as string;\n    const PAGE_NAME = \"Yazilar\";\n    const pageTitle = siteName + separator + PAGE_NAME;\n\n    const uploads_dir = process.env.REACT_APP_UPLOADS_DIR as string;\n    const featureImageName = \"yazilar-feature-image\";\n    const featureImagePath = `${uploads_dir}/${featureImageName}-`;\n    const srcSet = [\n        \"scaled.jpg 2560w\", \n        \"300x196.jpg 300w\", \n        \"1024x669.jpg 1024w\", \n        \"768x501.jpg 768w\", \n        \"1536x1003.jpg 1536w\", \n        \"2048x1337.jpg 2048w\"\n    ]\n    .map((variation) => featureImagePath + variation)\n    .join(\",\");\n\n    ReactGA.pageview(window.location.pathname + window.location.search);\n\n    return (\n        <Fragment>\n            <Helmet>\n                <title>{pageTitle}</title>\n            </Helmet>\n            <div\n                className=\"Canvas blog has-FeatureImage has-body-title\"\n                >\n                <div className=\"Canvas-decor\">\n                    <div className=\"FeatureImage-on\" >    \n                        <img \n                            width=\"2560\" \n                            height=\"1671\" \n                            src={`${featureImageName}scaled.jpg`} \n                            alt=\"Feature\" \n                            srcSet={srcSet} \n                            sizes=\"(max-width: 2560px) 100vw, 2560px\" />\n                    </div>\n                    <h2 className=\"Canvas-featureTitle text-blue\">{PAGE_NAME}</h2>\n                </div>\n                    <h2 className=\"Canvas-articleTitle text-blue\">{PAGE_NAME}</h2>\n                    <article>\n                        <PostList excludeSlug={[]}/>\n                    </article>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Blog;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { fetchCategoryPosts } from \"../wp/singularActions\";\nimport { setFetching } from \"../app/appActions\";\nimport \"./_postList.scss\";\n\nimport PostListCard from \"./PostListCard\";\n\nconst mapState = (state: RootState) => ({\n    posts: state.singular.post,\n\n})\n\nconst mapDispatch = { \n    fetchCategoryPosts,\n    setFetching,\n}   \n\ninterface OwnProps {\n    excludeSlug: string[] //slugs to exclude, helps to exclude the current post when the postList is displayed in a post\n}\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\n// const styles: CSSStyles = {\n//     img: {\n//         width: \"430px\",\n//         height: \"100vh\",\n//         position: \"fixed\",\n//         left: 0,\n//         top: 0,\n//         backgroundColor: \"gray\", \n\n//     }\n// }\n\nfunction PostList(props: Props): React.FunctionComponentElement<Props> {\n\n\n    // !HACK this is faulty logic\n    setTimeout(() => {\n        console.log(\"scan\", props.posts.fetchTime, (Date.now() - 5000))\n        if(props.posts.fetchTime < (Date.now() - 5000)) {\n            props.fetchCategoryPosts(process.env.REACT_APP_BLOG_SLUG as string);\n        }\n    }, 1000)\n    props.setFetching(false);\n\n    const post_list = Object.values(props.posts.items)\n        .filter((single) => (single.data.slug !== props.excludeSlug[0]) || false)\n        .map((single) => {\n        const d = single.data\n        return (\n            <li key={d.slug}>\n                <PostListCard \n                    title={d.title}\n                    date={d.date}\n                    content={d.content}\n                    excerpt={d.excerpt}\n                    slug={d.slug}\n                    thumbnail={d.thumbnail}\n                />\n\n            </li>\n        )\n    })\n\n\n\n    return (\n        <div className=\"PostList\">\n            <ol>\n                {post_list}\n            </ol>\n        </div>\n    )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    // @ts-ignore\n    mapState, mapDispatch)(PostList);\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./_postList_card.scss\";\n\ninterface Props {\n    title: string,\n    content: string,\n    excerpt: string,\n    date: string,\n    slug: string,\n    thumbnail: string,\n}\n\nfunction PostListCard(props: Props): React.FunctionComponentElement<Props> {\n    const excerpt = props.excerpt !== \"\" \n        ? props.excerpt\n        : createExcerpt(props.content);\n\n    if(process.env.NODE_ENV === 'development') {\n        console.log(props.date.replace(/-/g, \"/\"));\n    }\n\n    const d = (new Date(props.date.replace(/-/g, \"/\"))); // short for date object \n    const date = d.toLocaleDateString(\"TR-TR\");\n    \n    return (\n        <Link \n            to={\"/\" + props.slug}\n            className=\"PostList-card\"\n            >\n            <div\n                className=\"PostList-card-thumbnail\"\n                dangerouslySetInnerHTML={{__html: props.thumbnail}}/>\n            <h4 \n                className=\"PostList-card-title\">\n                {props.title}\n                </h4>\n            <span \n                className=\"PostList-card-date\">\n                {date}</span>\n            <div \n                className=\"PostList-card-excerpt\" \n                dangerouslySetInnerHTML={{__html: excerpt}}></div>\n            \n        </Link>\n    )\n}\n\nfunction createExcerpt(content: Props['content']): Props[\"excerpt\"] {\n    return content.split(\"</p>\")[0] + \"</p>\";\n}\n\nexport default PostListCard;","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../store/rootReducer\";\nimport { fetchSingular } from \"../wp/singularActions\";\nimport { setFetching, setDisplaying } from '../app/appActions'\nimport stateMap from \"../../store/@types-state\";\nimport { singularTypes, wpSingularItem } from \"../wp/@types-wp\";\n\nimport BodyView from \"../../components/body/BodyView\";\n\nconst mapState = (state: RootState) => ({\n    singular: state.singular,\n    isDisplaying: state.app.isDisplaying,\n    isFetching: state.app.isFetching,\n})\n\nconst mapDispatch = { \n    fetchSingular,\n    setFetching,\n    setDisplaying,\n}\n\ninterface OwnProps {}\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction findBySlug(singular: stateMap[\"singular\"], slug: string): wpSingularItem | undefined {\n    return Object.values(singular)\n        .map((archive: stateMap[\"singular\"][singularTypes]) => {\n            return archive.items[slug]\n                ? archive.items[slug].data\n                : undefined;\n        })\n        .filter((data: wpSingularItem | undefined) => {\n            return data !== undefined\n        })[0];\n\n}\n\nfunction Body(props: Props): React.FunctionComponentElement<Props> {\n\n    const setFetching = props.setFetching;\n    const setDisplaying = props.setDisplaying;\n    const fetchSingular = props.fetchSingular;\n\n    // console.log(props.isDisplaying)\n\n    const url_slug = useParams<{slug: string}>().slug || \"home\";\n    const slug = props.isDisplaying.slug;\n    if(url_slug !== slug) {\n        props.setDisplaying({\n            slug: url_slug,\n        })\n    }\n\n    const item = findBySlug(props.singular, slug);\n\n    useEffect(() => {\n        if (item === undefined) {\n            setFetching(true);\n            if(process.env.NODE_ENV === 'development') {\n                setTimeout(() => {\n                    fetchSingular(slug)\n                }, 300);\n            } else {\n                fetchSingular(slug)\n            }\n        } else {\n            setDisplaying({\n                active: {\n                    slug: item.slug,\n                    title: item.title,\n                    type: item.type,\n                    content: item.content,\n                    thumbnail: item.thumbnail,\n                }\n            })\n            setFetching(false);\n        }\n    }, [item, slug, fetchSingular, setFetching, setDisplaying])\n\n    return (\n        <BodyView \n            slug={props.isDisplaying.active.slug}\n            title={props.isDisplaying.active.title}\n            type={props.isDisplaying.active.type}\n            content={props.isDisplaying.active.content}\n            thumbnail={props.isDisplaying.active.thumbnail}/>\n    )\n}\n\n\n\n\n\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    // @ts-ignore\n    mapState, mapDispatch)(Body);\n","import stateMap from \"../../store/@types-state\";\n\nconst initialState: stateMap['social'] = {\n    items: [\n        {\n            title: \"Instagram\",\n            link: 'https://www.instagram.com/basak_beykoz/',\n            icon: process.env.REACT_APP_UPLOADS_DIR + \"/instagram.svg\",\n        },\n        {\n            title: \"LinkedIn\",\n            link: 'https://www.linkedin.com/in/basakbeykoz/',\n            icon: process.env.REACT_APP_UPLOADS_DIR + \"/linkedin.svg\",\n        },\n    ]\n}\n\nexport default function (\n    state = initialState,\n): stateMap['social'] {\n    return state;\n}","import React, { useEffect, useState } from \"react\";\nimport \"./_spinner.scss\";\nimport { connect } from \"react-redux\";\n// import { CSSStyles } from \"./@types-app\";\nimport { RootState } from \"../../store/rootReducer\";\nimport SpinnerView from '../../components/spinner/SpinnerView';\n\nconst mapState = (state: RootState) => ({\n    isFetching: state.app.isFetching,\n})\n\nconst mapDispatch = {}\n\ninterface OwnProps {}\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction Spinner(props: Props): React.FunctionComponentElement<Props> {\n\n    // !TODO you use redux, useState shouldn't be here\n    const [display, setDisplay] = useState(\"none\");\n\n    const loadingMessages = [\n        \"Hemen geliyor\",\n        \"Tazeden gelsin\",\n        \"Ailecek yukluyoruz\",\n        \"Sayfa bizden, okumak sizden\",\n        \"Aaa negezel yukluyo\",\n    ];\n\n    useEffect(() => {\n        if(props.isFetching) {\n            setDisplay(\"grid\");\n        } else {\n            setDisplay(\"none\");\n        }\n    }, [props.isFetching]);\n\n    // selects a random message from loading messages array\n    const loadingMessage = loadingMessages[\n        Math.floor(Math.random()*(loadingMessages.length - 1))\n    ] + \"...\";\n\n    return <SpinnerView display={display} loadingMessage={loadingMessage} />\n    // return (\n    //     <div \n    //         className=\"Spinner\"\n    //         style={{display}}>\n    //         <img \n    //             src={ uploadsDir + \"/logo-inline-black.svg\"}\n    //             alt=\"Basak Beykoz\"\n    //             className=\"Spinner-logo\"/>\n    //         <p \n    //             className=\"Spinner-loadMessage\"\n    //             >{ loadingMessage }</p>\n    //     </div>\n    // )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore,\n    mapState, mapDispatch)(Spinner);\n","// extracted by mini-css-extract-plugin","import { \n    FETCH_CATEGORIES, \n    FETCH_CATEGORY \n} from '../../common/types'\nimport { FSA } from '../../common/@types-actions'\n\nconst initialState = {\n    items: [],\n    post: undefined,\n}\n\nexport default function(\n    state = initialState, \n    action: FSA<any>\n) { //!HACK any\n    switch (action.type) {\n\n        case FETCH_CATEGORIES:\n            if (action.state === \"fail\") return state;\n            return {\n                ...state,\n                items: action.payload\n            }\n            \n        case FETCH_CATEGORY:\n            if (action.state === \"fail\") return state;\n            return {\n                ...state,\n                single: action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n","import { DispatchMethod } from '../../common/@types-actions';\n\nimport { FETCH_MENU } from '../../common/types'\n\n// import WPAPI, { WPRequest } from \"wpapi\";\n\n// const wp = new WPAPI({endpoint: process.env.REACT_APP_REST_ENDPOINT as string});\n// wp.menus = wp.registerRoute(\"menus/v1\", \"menus/(<slug>)\");\n\nexport const fetchMenu = (slug: string) => \n    (dispatch: DispatchMethod<any>) => { //!HACK any\n        fetch(process.env.REACT_APP_REST_ENDPOINT + \"/menus/v1/menus/\" + slug)\n            .then(data => data.json())\n            .then((json) => {\n                if(json) { // TODO you need a better error test here\n                    dispatch({\n                        type: FETCH_MENU,\n                        state: \"success\",\n                        payload: json.items\n                    })\n                } else {\n                    dispatch({\n                        type: FETCH_MENU,\n                        state: \"fail\",\n                        error: \"something went wrong\",\n                    })\n                }\n            })\n    }\n","import {FETCH_MENU} from '../../common/types'\nimport { FSA  } from '../../common/@types-actions'\n\nconst initialState = {\n    items: []\n}\n\nexport default function(state = initialState, action: FSA<any>) { // !HACK any\n    switch (action.type) {\n        \n        case FETCH_MENU:\n            if(action.state === \"fail\") return state;\n            return {\n                ...state,\n                items: action.payload\n            }\n            \n        default:\n            return state;\n    }\n}\n","import { SluggedTimestampedSingular, wpSingularItem,singularTypes } from \"./@types-wp\";\n\nexport function filterByType<T extends string[]>(\n    items: wpSingularItem[], \n    type: singularTypes,\n    time: number,\n): SluggedTimestampedSingular {\n    return items.reduce((\n            p: SluggedTimestampedSingular, \n            c: wpSingularItem\n        ) => {\n            if(c.type === type) {\n                p[c.slug] = { \n                    loadTime: time,\n                    data: c\n                };\n            }\n            return p;\n        }, {});\n}","import { DispatchMethod } from '../../common/@types-actions';\nimport { FETCH_SINGULAR, FETCH_CATEGORY_POSTS, FETCH_PAGE  } from '../../common/types'\nimport { wpSingularItem, PartialSingularDispatch } from './@types-wp';\n// import WPAPI, { WPRequest } from \"wpapi\";\nimport { filterByType } from './mergers';\n\n// const wp = new WPAPI({endpoint: process.env.REACT_APP_REST_ENDPOINT as string})\nconst re = process.env.REACT_APP_REST_ENDPOINT; \n\nexport const fetchSingular = (slug: string) => \n    (dispatch: DispatchMethod<PartialSingularDispatch>) => {\n        fetch(re + \"/customrest/v1/singular_slug/\" + slug)\n            .then(data => data.json())\n            .then((singular_item: wpSingularItem) => {\n                if(singular_item) { // !TODO you need a better success test here\n                    dispatch({\n                        type: FETCH_SINGULAR,\n                        state: \"success\",\n                        payload: {\n                            [singular_item.type]: {\n                                [singular_item.slug] : {\n                                    loadTime: Date.now(),\n                                    data: singular_item,\n                                }\n                            }\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: FETCH_SINGULAR,\n                        state: \"fail\",\n                        error: \"json is booboo\"\n                    })\n                }\n            })\n}\n\nexport const fetchCategoryPosts = (slug: string) => \n    (dispatch: DispatchMethod<PartialSingularDispatch>) => {\n        fetch(re + \"/customrest/v1/category_posts_slug/\" + slug)\n            .then(data => data.json())\n            .then((category_posts: wpSingularItem[]) => {\n                if(category_posts) { // !TODO you need a better success test here\n                    const now = Date.now();\n                    const payload = {\n                        fetchTime: Date.now(),\n                        post: filterByType(category_posts, \"post\", now),\n                        page: filterByType(category_posts, \"page\", now),\n                    }\n                    dispatch({\n                        type: FETCH_CATEGORY_POSTS,\n                        state: \"success\",\n                        payload,\n                    })\n                } else {\n                    dispatch({\n                        type: FETCH_CATEGORY_POSTS,\n                        state: \"fail\",\n                        error: \"json is booboo\",\n                    })\n                }\n            })\n    }\n\nexport const fetchPage = (slug: string) => \n    (dispatch: DispatchMethod<PartialSingularDispatch>) => {\n        fetch(re + \"/wp/v2/pages/?slug=\" + slug)\n            .then(data => data.json())\n            .then((items: wpSingularItem[]) => {\n                if(items) { // !TODO you need a better success test here\n                    const singular_item = items[0];\n                    dispatch({\n                        type: FETCH_PAGE,\n                        state: \"success\",\n                        payload: {\n                            [singular_item.type]: {\n                                [singular_item.slug] : {\n                                    loadTime: Date.now(),\n                                    data: singular_item,\n                                }\n                            }\n                        }\n                    })\n                } else {\n                    dispatch({\n                        type: FETCH_PAGE,\n                        state: \"fail\",\n                        error: \"json is booboo\"\n                    })\n                }\n            })\n        // (wp.pages().slug(page_slug) as WPRequest)\n        //     .get((err: Error, items: wpSingularItem[]) => {\n        //         console.log(\"page\", items)\n        //         if(err) {\n        //             dispatch({\n        //                 type: FETCH_PAGE,\n        //                 state: \"fail\",\n        //                 error: \"json is booboo\",\n        //             });\n        //         } else {\n        //             const singular_item = items[0];\n        //             dispatch({\n        //                 type: FETCH_PAGE,\n        //                 state: \"success\",\n        //                 payload: {\n        //                     [singular_item.type]: {\n        //                         [singular_item.slug] : {\n        //                             loadTime: Date.now(),\n        //                             data: singular_item,\n        //                         }\n        //                     }\n        //                 }\n        //             })\n        //         }\n        //     });\n    }\n\n","import { FETCH_SINGULAR, FETCH_CATEGORY_POSTS, FETCH_PAGE } from '../../common/types'\nimport { FSA } from '../../common/@types-actions'\nimport stateMap from '../../store/@types-state';\nimport { PartialSingularDispatch } from './@types-wp';\n\nconst initialState: stateMap[\"singular\"] = {\n    post: {\n        fetchTime: 0,\n        items: {}\n    },\n    page: {\n        items: {}\n    },\n}\n\nexport default function(\n    state = initialState, \n    action: FSA<PartialSingularDispatch>\n): stateMap[\"singular\"] {\n    switch (action.type) {\n\n        case FETCH_SINGULAR:\n            if(action.state === \"success\") {\n                return {\n                    post: {\n                        ...state.post,\n                        items: {\n                            ...state.post.items,\n                            ...action.payload.post,\n                        }\n                    },\n                    page: {\n                        items: {\n                            ...state.page.items,\n                            ...action.payload.page,\n                        },\n                    },\n                }\n            } else {\n                return state;\n            }\n\n        case FETCH_PAGE:\n            if(action.state === \"success\") {\n                return {\n                    ...state,\n                    page: {\n                        ...state.page,\n                        items: {\n                            ...state.page.items,\n                            ...action.payload.page,\n\n                        }\n                    }\n                }\n            } else {\n                return state;\n            }\n\n        case FETCH_CATEGORY_POSTS:            \n            if(action.state === \"success\") {\n                return {\n                    ...state,\n                    post: {\n                        fetchTime: action.payload.fetchTime as number,\n                        items: {\n                            ...state.post.items,\n                            ...action.payload.post,\n                        }\n                    },\n                }\n            } else {\n                return state;\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@csstools/normalize.css';\nimport './index.scss';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize(process.env.REACT_APP_GA_TRACKING_ID as string, { debug: true });\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { wpMenuItem } from '../features/wp/@types-wp';\nimport { RootState } from '../store/rootReducer';\nimport { fetchMenu } from \"../features/wp/menuActions\";\nimport { setIsMenuOpen } from '../features/app/appActions'\nimport './_nav.scss';\nimport NavItem from './NavItem';\n\nconst mapState = (state: RootState) => ({\n    menu: state.menu,\n});\n\nconst mapDispatch = { \n    fetchMenu, \n    setIsMenuOpen,\n}\n\ninterface OwnProps { }\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction Nav(props: Props) {\n\n    const fetchMenu = props.fetchMenu; \n    useEffect(() => {\n        fetchMenu(\"nav\");\n    }, [fetchMenu])\n\n    const menuItems: JSX.Element[] = props.menu.items\n        .map((item: wpMenuItem) => <NavItem item={item} /> )\n\n    return <nav>{menuItems}</nav>\n}\n\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(Nav);\n","import React from \"react\";\nimport Nav from './Nav';\nimport { connect } from \"react-redux\";\nimport { setIsMenuOpen } from '../features/app/appActions'\nimport { RootState } from '../store/rootReducer';\nimport \"./_navContainer.scss\";\n\nconst mapState = (state: RootState) => ({\n    isMenuOpen: state.app.isMenuOpen,\n});\n\nconst mapDispatch = { \n    setIsMenuOpen,\n}\n\ninterface OwnProps { }\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction NavContainer(\n    props: Props\n): React.FunctionComponentElement<Props> {\n\n    const menuToggle = () => {\n        props.setIsMenuOpen(!props.isMenuOpen)\n    }\n\n    return (\n        <div \n            onClick={menuToggle}\n            className={\"NavContainer \" + (props.isMenuOpen ? \"open\" : \"\") \n        }>\n            <div className=\"NavContainer-mask\" />\n            <div className=\"NavContainer-decor\" />\n            <div className=\"NavContainer-list\">\n                <Nav />\n            </div>\n        </div>\n    )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(NavContainer);\n","import React from 'react';\nimport { wpMenuItem } from '../features/wp/@types-wp';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { RootState } from '../store/rootReducer';\nimport { setDisplaying } from '../features/app/appActions'\nimport './_navItem.scss';\n\ninterface OwnProps {\n    item: wpMenuItem;\n}\n\nconst mapState = (state: RootState) => ({});\n\nconst mapDispatch = { \n    setDisplaying,\n}\n\ninterface OwnProps { }\ntype DispatchProps = typeof mapDispatch;\ntype StateProps = ReturnType<typeof mapState>;\ntype Props = DispatchProps & StateProps & OwnProps;\n\nfunction NavItem(props: Props) {\n    const { item } = props;\n    const cleanSlug = !!item.slug\n        ? item.slug\n        : \"\";\n\n    const setDisplaying = (slug: string) => {\n        props.setDisplaying({\n            slug,\n        });        \n    }\n\n    return (\n        <NavLink \n            key={item.ID}\n            exact\n            to={\"/\" + cleanSlug}\n            className=\"Nav-item\"\n            activeClassName=\"Nav-item-active\"\n            onClick={() => setDisplaying(cleanSlug)}\n            >{item.title}\n        </NavLink>\n    )\n}\n\nexport default connect<StateProps, DispatchProps, OwnProps>(\n    //@ts-ignore\n    mapState, mapDispatch, )(NavItem);\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","import React from 'react';\nimport Blog from '../features/blog/Blog';\n\nfunction BlogRoute() {\n    return <Blog />\n}\n\nexport default BlogRoute;","import React from 'react';\nimport Body from '../features/body/Body';\n\nfunction BodyRoute() {\n    return <Body />\n}\n\nexport default BodyRoute;","import React from 'react';\nimport Credits from '../components/credits/Credits';\n\nfunction CreditsRoute() {\n    return <Credits />\n}\n\nexport default CreditsRoute;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport menuReducer from '../features/wp/menuReducer';\n// import postReducer from '../wp/postReducer'\n// import pageReducer from '../wp/singularReducer';\nimport categoryReducer from '../features/wp/categoryReducer'\nimport appReducer from \"../features/app/appReducer\";\nimport singularReducer from '../features/wp/singularReducer';\nimport socialReducer from '../features/social/socialReducer';\n\nexport const rootReducer = combineReducers({\n    app: appReducer,\n    menu: menuReducer,\n    social: socialReducer,\n    singular: singularReducer,\n    categories: categoryReducer,\n})\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./rootReducer\";\n\nconst initialState = {}\n\nconst middleware = [thunk]\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeEnhancers(\n        applyMiddleware(...middleware),\n    ),\n);\n\nexport default store\n"],"mappings":"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ACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAMA;AAEA;;;;;;;;;;;;AClGA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAPA;AAeA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AAMA;AAEA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AC9DA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAMA;AACA;AACA;AAFA;AAKA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AAjBA;AAmBA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAGA;AACA;AADA;AAIA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AAVA;AAYA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAKA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAHA;AAYA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAHA;AAYA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAUA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAFA;AAOA;AACA;AAEA;AAFA;AADA;AARA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAFA;AAFA;AAFA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAFA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AAzDA;AA2DA;;;;;;;;;;;AC9EA;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AACA;AASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAQA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AADA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAEA;;;;;;;;;;;AClDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAUA;AACA,eAiCA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAQA;;;;;;;;;;;;;;;;A","sourceRoot":""}