@mixin wpPostsP() {
  @include p();
  font-size: responsive-width(
    get-typography(p, font-size_min__),
    16
  ) !important;
  line-height: responsive-width(
    get-typography(p, line-height_min__),
    20
  ) !important;
  margin: 0;
}
@mixin wpPosts($type, $gridFlow: row, $cardColor: getColor('bg-white')) {
  .wp-block-latest-posts {
    grid-area: posts;
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    $homePostsNarrowY: get-component-property(home, 'posts_y_px');
    $liDistance: $GAP_PX;
    $liMaxWidth: 350px;
    $liMinWidth: 260px;
    @include breakpoint('w', 'SVGA__') {
      border-radius: #{$GAP_PX/2};
    }
    &,
    .os-content {
      display: grid;
      grid-auto-flow: column;
      @include breakpoint('w', 'SVGA__') {
        @if $gridFlow == row {
          grid-auto-flow: row;
        } @else if $gridFlow == column {
        }
      }
    }
    & li {
      background-color: $cardColor;
      margin-left: #{$liDistance};
      display: grid;
      grid-row-gap: #{$GAP_PX / 2};
      position: relative;
      width: 50vw;
      max-width: #{$liMaxWidth};
      border-radius: #{$GAP_PX/2};
      padding: #{$GAP_PX/2};
      overflow: hidden;
      height: calc(100% - #{$GAP_PX});
      cursor: pointer;
      @if $type == posts {
        grid-template-areas:
          'image'
          'title'
          'time'
          'excerpt';
        grid-template-rows: max-content max-content max-content max-content;
      } @else if $type == success {
        grid-template-areas:
          'image'
          'title'
          'excerpt';
        grid-template-rows: max-content max-content 1fr;
      }
      &::before {
        content: '';
        position: absolute;
        z-index: 10;
        bottom: 0;
        width: 100%;
        height: #{$GAP_PX / 2 * 3};
        background: linear-gradient(transparent 0, #{$cardColor} #{$GAP_PX});
      }
      @include breakpoint('w', 'SVGA__') {
        @if $gridFlow == row {
          @if $type == posts {
            grid-template-areas:
              'image title'
              'image time'
              'image excerpt';
            grid-template-rows: min-content min-content auto;
            grid-template-columns: #{$homePostsNarrowY} auto;
            grid-column-gap: #{$GAP_PX/2};
            grid-row-gap: 5px;
            width: 100%;
            max-width: calc(100% - #{$GAP_PX});
            height: calc(#{$homePostsNarrowY} + #{$GAP_PX});
            margin-left: 0;
            margin-bottom: #{$GAP_PX};
          }
        } @else if $gridFlow == column {
          max-width: 250px;
        }
        &:first-child {
          margin-left: 0;
        }
      }
      &:last-child::after {
        content: '';
        position: absolute;
        right: #{-1.25 * $liDistance};
        width: 1px;
        height: 1px;
      }
      .wp-block-latest-posts__featured-image {
        grid-area: image;
        height: 150px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        border-radius: #{$GAP_PX/3};
        @include breakpoint('w', 'SVGA__') {
          @if $gridFlow == row {
            height: calc(#{$homePostsNarrowY} + #{$GAP_PX});
          }
        }
        & > img {
          min-height: 100%;
          min-width: 100%;
          object-fit: cover;
          z-index: 10;
          @include breakpoint('w', 'SVGA__') {
            @if $gridFlow == row {
              object-fit: cover;
            }
          }
        }
      }
      time {
        @include wpPostsP();
        margin: 0;
        grid-area: time !important;
        font-size: 0.8em;
        color: #{getColor('text-mediumLight')};
        @include breakpoint('w', 'SVGA__') {
          @if $type == posts {
            display: block;
          }
        }
      }
      .wp-block-latest-posts__post-full-content,
      .wp-block-latest-posts__post-excerpt {
        @include p();
        &,
        & > p {
          @include wpPostsP();
        }
        font-size: #{get-font-size(excerpt_px)};
        grid-area: excerpt !important;
        color: #{getColor('text-mediumDark')};
        position: relative;
        margin: 0;
      }
      a {
        @include h4;
        grid-area: title;
        text-decoration: none;
      }
    }
  }
}
