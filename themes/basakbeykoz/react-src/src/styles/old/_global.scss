/* 
    SCROLLBAR 
*/
::-webkit-scrollbar {
    & {
        width: var(--accent-thickness);
    }
    &-track {
        background: var(--blue);
    }
    &-thumb {
        background: var(--yellow);
        
        &:hover {
            background: var(--black);
            border-right: var(--black);
        }
    }
}

:root {
    /* measurements */
    --wp-frame-width: 1200px;
    --wp-frame-padding-x: 7em;
    --wp-text-with: 800px;
    --accent-thickness: 30px;
    /* This calculation has been made by the code at this address: https://codepen.io/sosuke/pen/Pjoqqp */
    --blue-filter: invert(34%) sepia(30%) saturate(388%) hue-rotate(139deg) brightness(92%) contrast(86%);
    --logo-white-filter: brightness(0) invert(100%) sepia(1%) saturate(4410%) hue-rotate(181deg) brightness(94%) contrast(107%);
    --home-vertical-padding: 200px;
    --home-horizontal-padding: 400px;

    --fixed-feature-image-width: 470px;
    --head-section-height: 110px;
}

body {
    margin: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background: var(--white);
    color: var(--black);
    overflow-y: scroll;
    overflow-x: hidden;
}

h1,
h2,
h3,
.wp-block-button__link,
figcaption {
    font-family: $title-font
}

.body.page.home>article>div .wp-block-latest-posts>li,
span,
nav,
p {
    font-family: $text-font;
}

nav,
p {
    font-size: 22px;
}

article {
    grid-area: article;

    & p {
        color: var(--blue)
    }
}


/* logo */

.logo:hover img {
    filter: none !important;
}

/* 
    IMAGE BORDERS 
*/
@function to-degree($direction) {
    @if $direction == horizontal {
        @return 90deg;
    } @else if $direction == vertical {
        @return 0deg;
    }
}

@function frame($color, $direction) {
    $degree: to-degree($direction);
    $at: var(--accent-thickness);
    @return linear-gradient(
        $degree, 
        $color calc(#{$at}/2), 
        transparent calc(#{$at}/2), 
        transparent calc(100% - #{$at}/2), 
        $color calc(100% - #{$at}/2)
    );
}



/*
    COLORS
*/
:root {
    --white: #F4F4F9;
    --black: #071013;
    --blue: #456266;
    --yellow: #E9B44C;
    --green: #81AE9D;
    --beige: #F6D697;
}

$colors: green, yellow, white, blue, black, beige;
@each $color in $colors {

    .bg-#{$color} {
        background-color: var(--#{$color});
    }

    .text-#{$color} {
        color: var(--#{$color});
    }

    .#{$color} {
        $var-color: var(--#{$color});
        &-horizontal-border:before {
            background: frame($var-color, horizontal);
        }
        &-vertical-border:after {
            background: frame($var-color, vertical);
        }
    }
}




/*
    FEATURE IMAGE
*/

@mixin feature-image-common {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    width: var(--fixed-feature-image-width);
}

.no-feature-image {
    @include feature-image-common();
    background-color: var(--green);
}

.feature-image {
    @include feature-image-common();
    & > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0.5;
    }
}
