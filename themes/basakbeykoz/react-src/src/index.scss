@charset 'utf-8';

@import './styles/abstracts/_mixins';
@import './styles/base/_fonts';
@import './styles/vendors/_scrollbar';

:root {
  --gap: #{$GAP_PX};
  --text-font: 'Work Sans', sans-serif;
  --text-font-weight: 400;
  --title-font: 'Montserrat', sans-serif;
  --title-font-weight: 600;
}

body {
  margin: 0;
  background: #{getColor('bg-white')};
  overflow-x: hidden;
  overflow-y: hidden;
  color: #{getColor('text-mediumDark')};
  font-size: #{get-font-size(default__) * 1px};
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

// creates headings
@for $i from 1 through 6 {
  $tag: 'h' + $i;
  #{$tag} {
    @include _heading($tag);
  }
}

.body.page.home > article > div .wp-block-latest-posts > li,
span,
nav {
  color: #{getColor('bg-blue')};
  font-family: #{get-font-property('text', 'font-family')};
  font-weight: #{get-font-property('text', 'font-weight')};
}

.wp-block-button__link,
figcaption {
  @include p-basic();
  margin: 0;
}

p {
  @include p();
}

cite,
li {
  @include p-basic();
}

/*
    COLORS
*/

:root {
  --brush-white: #fbfbfb;
  --brush-lightGray: #e7e7e7f3;
  --brush-gray: #859fa4;
  --brush-darkGray: #34414b;
  --brush-black: #34414b;
  --brush-lightBlue: #adcbdd;
  --brush-darkBlue: #324358;
  --brush-lightYellow: #ffeec6;
  --brush-darkYellow: #ffc05b;
  --brush-lightGreen: #c6dfd7;

  // https://codepen.io/sosuke/pen/Pjoqqp helped with these
  $filterWhite: contrast(1) invert(96%) sepia(4%) saturate(282%)
    hue-rotate(202deg) brightness(102%) contrast(95%);
  --filter-white: #{$filterWhite};
  --filter-darkGray: brightness(0) invert(20%) sepia(6%) saturate(2240%)
    hue-rotate(164deg) brightness(98%) contrast(84%);
  --filter-logo-white: brightness(0) #{$filterWhite};
}

.text {
  &-light {
    color: #{getColor('text-light')};
  }
  &-mediumLight {
    color: #{getColor('text-mediumDark')};
  }
  &-mediumDark {
    color: #{getColor('text-mediumDark')};
  }
  &-dark {
    color: #{getColor('text-dark')};
  }
}

$colorCategories: ('green', 'yellow', 'white', 'blue', 'black');
@each $color in $colorCategories {
  .bg-#{$color} {
    $bgColor: 'bg-' + $color;
    background-color: #{getColor($bgColor)};
  }
  .#{$color} {
    $bgColor: 'bg-' + $color;
    $varColor: #{getColor($bgColor)};
    &-horizontal-border:before {
      background: linear-gradient-frame($varColor, horizontal);
    }
    &-vertical-border:after {
      background: linear-gradient-frame($varColor, vertical);
    }
  }
}

.wp {
  &-block {
    &-pullquote {
      $fringe_px: $GAP_PX/2;
      margin: 0 #{-$fringe_px} #{$fringe_px} #{-$fringe_px};
      border-radius: #{$fringe_px};
      overflow: hidden;
      background-color: getColor('bg-gray');
      & > blockquote {
        display: grid;
        grid-template-areas: 'paragraph' 'cite';
        margin: #{$fringe_px};
        & > p {
          margin-bottom: #{$fringe_px};
        }
        & > cite {
          grid-area: cite;
          align-self: end;
          width: 100%;
          text-align: right;
        }
      }
    }
  }
}
